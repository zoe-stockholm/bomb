server {

    listen 80 default_server;
    server_name gazenet.se;
    charset utf-8;

    # ssl on;
    # ssl_certificate /etc/ssl/certs/star.kulturdirekt.se.chained.crt;
    # ssl_certificate_key /etc/ssl/private/star.kulturdirekt.se.key;

    client_max_body_size 32M;

    set $env prod;

    set $project_name gazenet;

    if ($host = 'ec2-52-51-156-213.eu-west-1.compute.amazonaws.com') {
        set $env stage;
    }

    set $web_path /var/www/$project_name;

    location /media {
        expires 7d;
        access_log off;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        alias $web_path/media;
    }

    set $static static;
    set $static static_collected;

    location /static {
        expires 1y;
        access_log off;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        alias $web_path/$static;
    }

    location / {
        set $fastrouter_key $project_name;

        if ($env = 'stage') {
            set $fastrouter_key stage_$project_name;
        }

        proxy_buffers 8 24k;
        proxy_buffer_size 2k;
        include /etc/nginx/uwsgi_params;

        uwsgi_param UWSGI_FASTROUTER_KEY $fastrouter_key;

        uwsgi_pass unix:/tmp/fastrouter.sock;
    }

    location /favicon.ico {
        alias $web_path/$static/favicon.ico;
    }

    location /robots.txt {
        # if we are on stage show robots_stage.txt
        set $robot robots;
        if ($env = 'stage') {
            set $robot robots_stage;
        }
        alias $web_path/$static/$robot.txt;
    }

# Enable Gzip compressed.
    gzip on;

# Compression level (1-9).
# 5 is a perfect compromise between size and cpu usage, offering about
# 75% reduction for most ascii files (almost identical to level 9).
    gzip_comp_level    5;

# Don't compress anything that's already small and unlikely to shrink much
# if at all (the default is 20 bytes, which is bad as that usually leads to
# larger files after gzipping).
    gzip_min_length    256;

# Compress data even for clients that are connecting to us via proxies,
# identified by the "Via" header (required for CloudFront).
    gzip_proxied       any;

# Tell proxies to cache both the gzipped and regular version of a resource
# whenever the client's Accept-Encoding capabilities header varies;
# Avoids the issue where a non-gzip capable client (which is extremely rare
# today) would display gibberish if their proxy gave them the gzipped version.
    gzip_vary          on;

# Compress all output labeled with one of the following MIME-types.
    gzip_types
        application/atom+xml
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;
}
